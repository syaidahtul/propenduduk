package app.core.domain.setup.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * Represents the compound key of a RoleFunction object.
 * <p>
 * A RoleFunction is a link object which represents a many-to-many relation
 * between Role and Function, hence the fields of this object.
 */
@Embeddable
public class RoleFunctionPK implements Serializable {

	private static final long serialVersionUID = 1L;

	private Long roleId;
	private String functionCode;

	/** default constructor */
	public RoleFunctionPK() {
	}

	/** The key of a Role object. */
	@Column(name = "ROLE_ID")
	public Long getRoleId() {
		return this.roleId;
	}

	public void setRoleId(Long roleId) {
		this.roleId = roleId;
	}

	/** The key of a Function object. */
	@Column(name = "FUNCTION_CODE")
	public String getFunctionCode() {
		return this.functionCode;
	}

	public void setFunctionCode(String functionCode) {
		this.functionCode = functionCode;
	}

	/**
	 * Auto-generated by hibernate tools
	 */
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof RoleFunctionPK))
			return false;
		RoleFunctionPK castOther = (RoleFunctionPK) other;

		return ((this.getRoleId() == castOther.getRoleId()) || (this.getRoleId() != null
				&& castOther.getRoleId() != null && this.getRoleId().equals(castOther.getRoleId())))
				&& ((this.getFunctionCode() == castOther.getFunctionCode())
						|| (this.getFunctionCode() != null && castOther.getFunctionCode() != null
								&& this.getFunctionCode().equals(castOther.getFunctionCode())));
	}

	/**
	 * Auto-generated by hibernate tools
	 */
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getRoleId() == null ? 0 : this.getRoleId().hashCode());
		result = 37 * result + (getFunctionCode() == null ? 0 : this.getFunctionCode().hashCode());
		return result;
	}

}